{% extends 'base_admin.html.twig' %}

{% block title %}
	{% if page == 'create' %}
		Nouveau Membre
	{% else %}
		Membre
		{{ member.firstname }}
		{{ member.lastname }}
	{% endif %}
{% endblock %}


{% block body %}

	<div class="container">

		{% for message in app.flashes('success') %}
			<div class="alert alert-success" role="alert">{{ message }}</div>
		{% endfor %}
		<h1>
			{% if page == 'create' %}
				Nouveau Membre
			{% else %}
				Modification
				{{ member.firstname }}
				{{ member.lastname }}
			{% endif %}
		</h1>
		<div class="text-end"></div>

		{{ form_start(form) }}


		{{ form_errors(form) }}
	{# 	{{ form_row(form.picture) }} #}
	
   
		{{ form_row(form.lastname) }}
		{{ form_row(form.firstname) }}
		{{ form_row(form.description) }}
    {{ form_row(form.gender) }}
		{{ form_row(form.city) }}
		{{ form_row(form.job_status) }}
	
		<div class="row">
      <div class="col">{{ form_row(form.announcements) }}</div>
      <div class="col">{{ form_row(form.specialization) }}</div>
    </div> 

		<button type="submit" class="btn btn-primary mt-4">
			{% if 'backoffice_member_add' == app.request.get('_route') %}
				Ajouter
			{% else %}
				Modifier
			{% endif %}
		</button>

		{{ form_end(form) }}

	</div>

    <script>
  $(function () {
    //Initialize Select2 Elements
    $('.select2').select2()

    //Initialize Select2 Elements
    $('.select2bs4').select2({
      theme: 'bootstrap4'
    })

    /

    

    //Bootstrap Duallistbox
    $('.duallistbox').bootstrapDualListbox()

    
    $("input[data-bootstrap-switch]").each(function(){
      $(this).bootstrapSwitch('state', $(this).prop('checked'));
    })

  })
  // BS-Stepper Init
  document.addEventListener('DOMContentLoaded', function () {
    window.stepper = new Stepper(document.querySelector('.bs-stepper'))
  })

  // DropzoneJS Demo Code Start
  Dropzone.autoDiscover = false

  // Get the template HTML and remove it from the doumenthe template HTML and remove it from the doument
  var previewNode = document.querySelector("#template")
  previewNode.id = ""
  var previewTemplate = previewNode.parentNode.innerHTML
  previewNode.parentNode.removeChild(previewNode)

  var myDropzone = new Dropzone(document.body, { // Make the whole body a dropzone
    url: "/target-url", // Set the url
    thumbnailWidth: 80,
    thumbnailHeight: 80,
    parallelUploads: 20,
    previewTemplate: previewTemplate,
    autoQueue: false, // Make sure the files aren't queued until manually added
    previewsContainer: "#previews", // Define the container to display the previews
    clickable: ".fileinput-button" // Define the element that should be used as click trigger to select files.
  })

  myDropzone.on("addedfile", function(file) {
    // Hookup the start button
    file.previewElement.querySelector(".start").onclick = function() { myDropzone.enqueueFile(file) }
  })

  // Update the total progress bar
  myDropzone.on("totaluploadprogress", function(progress) {
    document.querySelector("#total-progress .progress-bar").style.width = progress + "%"
  })

  myDropzone.on("sending", function(file) {
    // Show the total progress bar when upload starts
    document.querySelector("#total-progress").style.opacity = "1"
    // And disable the start button
    file.previewElement.querySelector(".start").setAttribute("disabled", "disabled")
  })

  // Hide the total progress bar when nothing's uploading anymore
  myDropzone.on("queuecomplete", function(progress) {
    document.querySelector("#total-progress").style.opacity = "0"
  })

  // Setup the buttons for all transfers
  // The "add files" button doesn't need to be setup because the config
  // `clickable` has already been specified.
  document.querySelector("#actions .start").onclick = function() {
    myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED))
  }
  document.querySelector("#actions .cancel").onclick = function() {
    myDropzone.removeAllFiles(true)
  }
  // DropzoneJS Demo Code End
</script>
{% endblock %}
